import os

def Menu(Titulo, Opcoes, np):
    print(Titulo)
    print()
    for i in range(np):
        print( i + 1 , " - ", Opcoes[i])
    print( "0 - Terminar")
    while True:
        print("Opção?")
        op = int(input())
        if (op >= 0 and op <= np):
            break
    return op

def NivelPessoa(funcionarios, id):
    n = 0
    while id != 0:
        for f in funcionarios:
            if f[0] == id:
                print(f)
                if (f[4] != 0):
                    n = n + 1
                    id = f[4]
                    break
                else:
                    id = 0
                    break
    n = n + 1
    return n

def NumeroPessoasNivel(funcionarios, nivel):
    n = 0
    for f in funcionarios:
        if NivelPessoa(funcionarios, f[0] == nivel):
            n = n + 1
    return n

def pessoasNivel(funcionarios, nivel):
    fu = []
    for f in funcionarios:
        n = NivelPessoa(funcionarios, f[0])
        if n == nivel:
            fu.append(f)
    return fu

def nivelHierarquia(funcionarios):
    nivel = 0 #Nivel maximo de hierarquia
    for f in funcionarios:
        np = NivelPessoa(funcionarios, f[0])
        if (np > nivel):
            nivel = np
    return nivel

def GerarOrganograma():
    nomeficheiro = "organograma.svg"
    f = open (nomeficheiro, "wt", encoding="utf-8")
    # Ler funcionario para um vector
    funcionarios = [(1,'Ana','Dra','Presidente', 0),
                    (2, 'Maria', 'Dra', 'Director ESTG', 1),
                    (3, 'Carlos', 'Prof', 'Director ESECD', 1),
                    (4, 'Miguel', 'Prof. Doutor', 'Director ESE', 1),
                    (30, 'Cristina', 'Mestre', 'Secretária', 2)
                    ]
    s = """<svg width="1500px" height="1610px" xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink" style="padding: 0px" version="1.1">"""
    print (s, file=f)
    largura = 150; largura_sep = 50; x0 = 10
    estilo = "fill:red;stroke:black;stroke-width:3;opacity:0.500000"
    y0 = 10; altura = 150; altura_sep = 50
    #for func in funcionarios:
    nivel_hierarquia = nivelHierarquia(funcionarios)
    for nivel in range (1, nivel_hierarquia+1):
        func_nivel = pessoasNivel(funcionarios, nivel)
        i = 0
        for func in func_nivel:
            np = nivel
            y = y0 + (np -1)*(altura + altura_sep)
            x = x0 + i * (largura + largura_sep)
            i = i + 1
            s = "<rect x='%d' y='%d' rx='20' ry='20' width='%d' height='%d' " \
                "style='%s'></rect>" % (x, y, largura, altura, estilo)
            print(s, file=f)
            #texto
            s = """<g transform="translate(%d,%d)">
                <text x="0" y="0" style="fill:black;">
                <tspan x="0" y="0">%s</tspan>
                <tspan x="0" y="%d">%s</tspan>
                <tspan x="0" y="%d">%s</tspan>
                </text>
                </g>""" % (x + 10, y + 20,
                           func[1],
                           25, func[2],
                           25*2, func[3])
            print(s, file=f)

    print("</svg>", file=f)
    f.close()

    os.system(nomeficheiro)


opcoes = ["Inserir", "Organograma", "..."]
while True:
    op = Menu("Gestão de Funcionários", opcoes, 3)
    if op == 0:
        break
    if op == 2:
        GerarOrganograma()
def listarTodos():
    f = open("funcionarios.csv", "rt", encoding='utf-8')
    funcionarios = f.readlines()
    f.close()
    # print(titulos)
    for funcionario in funcionarios:
        funcionario = funcionario.rstrip('\n')
        IDFuncionario,\
        CdFuncionario,\
        CdFuncionario,\
        IDCategoria,\
        IDTitulo,\
        IDServico,\
        IDFuncionarioChefe,\
        EMail,\
        Telemovel,\
        NIF,\
        NCC,\
        DataAdmissao,\
        Vencimento,Vazio,Nome, Apelido = funcionario.split(";")
        print("%3s  %-5s  %s" % (IDFuncionario, CdFuncionario, CdFuncionario))

def contarFuncionariosCategoria():
    idcategoriacontar=input("indica a categoria?");
    f = open("funcionarios.csv", "rt", encoding='utf-8')
    funcionarios = f.readlines()
    f.close()
    n = 0
    for funcionario in funcionarios:
        funcionario = funcionario.rstrip('\n')
        IDFuncionario,\
        CdFuncionario,\
        CdFuncionario,\
        IDCategoria,\
        IDTitulo,\
        IDServico,\
        IDFuncionarioChefe,\
        EMail,\
        Telemovel,\
        NIF,\
        NCC,\
        DataAdmissao,\
        Vencimento,Vazio,Nome, Apelido = funcionario.split(";")
        if idcategoriacontar == IDCategoria:
            n = n + 1
            print("%3s  %-5s  %s" % (IDFuncionario, CdFuncionario, CdFuncionario))
    print ("Total funcionários da categoria  %s: %d" % (idcategoriacontar, n))


def pesquisaFuncionario(ID):
    f = open("funcionarios.csv", "rt", encoding='utf-8')
    funcionarios = f.readlines()
    f.close()
    n = 0
    for funcionario in funcionarios:
        funcionario = funcionario.rstrip('\n')
        v = funcionario.split(";")
        if v[0] == ID:
            return v
    return None

def pesquisaFuncionarioEmail(EmailFuncionario):
    f = open("funcionarios.csv", "rt", encoding='utf-8')
    funcionarios = f.readlines()
    f.close()
    n = 0
    for funcionario in funcionarios:
        funcionario = funcionario.rstrip('\n')
        v = funcionario.split(";")
        # print(v[7])
        if v[7] == EmailFuncionario:
            return v
    return None

def inserirFuncionario():

    while True:
        IDFuncionario = input("IDFuncionario ? ")
        if pesquisaFuncionario(IDFuncionario) == None:
            break
        else:
            print("Funcionário já existe")
    #  nome
    # ...
    while True:
        EmailFuncionario = input("Email ? ")
        if pesquisaFuncionarioEmail(EmailFuncionario) == None:
            break
        else:
            print("Email já existe")

inserirFuncionario()

#inserirFuncionario()

# contarFuncionariosCategoria()
# listarTodos()
